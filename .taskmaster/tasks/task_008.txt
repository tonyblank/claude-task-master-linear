# Task ID: 8
# Title: Create Interactive Setup Wizard Command
# Status: pending
# Dependencies: 7
# Priority: high
# Description: Implement the sync-setup command for configuring Linear integration
# Details:
Create an interactive CLI command that prompts users for Linear API key, team selection, and project selection. Use Linear API to fetch and display available teams and projects. Store configuration securely with API key in .env and other settings in config.json. Include validation and error handling for each step.

# Test Strategy:
Test the complete setup flow with valid credentials. Verify team and project lists are fetched correctly. Test error handling for invalid API keys and network failures during setup.

# Subtasks:
## 1. Create interactive CLI prompts for API key [pending]
### Dependencies: None
### Description: Implement interactive command-line prompts to collect and validate API key from user input with proper masking and error handling
### Details:
Create CLI interface using libraries like inquirer or prompts to securely collect API key input. Include input validation, masking for security, retry logic for invalid keys, and clear instructions for users on where to find their API key.

## 2. Implement team fetching and selection [pending]
### Dependencies: 8.1
### Description: Build functionality to fetch available teams from API and present interactive selection interface to user
### Details:
Use the validated API key to make authenticated requests to fetch user's teams. Present teams in a selectable list format with team names and IDs. Handle cases where user has no teams, single team auto-selection, and API errors gracefully.

## 3. Implement project fetching and selection [pending]
### Dependencies: 8.2
### Description: Create project fetching logic and interactive selection interface based on selected team
### Details:
Fetch projects associated with the selected team through API calls. Display projects in an organized, selectable format showing project names, descriptions, and relevant metadata. Include search/filter capabilities for large project lists and handle empty project scenarios.

## 4. Add configuration validation [pending]
### Dependencies: 8.3
### Description: Implement comprehensive validation for all collected configuration data and API connectivity
### Details:
Validate API key format and permissions, verify team and project selections exist and are accessible, test API connectivity with selected configurations, and provide clear error messages for any validation failures with suggested remediation steps.

## 5. Store settings securely [pending]
### Dependencies: 8.4
### Description: Implement secure storage mechanism for configuration settings with encryption and proper file permissions
### Details:
Create secure configuration file storage using appropriate encryption for sensitive data like API keys. Set proper file permissions, implement configuration file structure, and include backup/recovery mechanisms. Support multiple configuration profiles if needed.

## 6. Add setup completion confirmation [pending]
### Dependencies: 8.5
### Description: Create final confirmation step showing configured settings and successful setup completion
### Details:
Display a summary of all configured settings (with sensitive data masked), confirm successful storage of configuration, provide next steps or usage instructions, and include options to modify settings or complete setup. Add success indicators and clear completion messaging.

